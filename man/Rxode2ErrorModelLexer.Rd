% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/error_model_rxode2_parser.R
\name{Rxode2ErrorModelLexer}
\alias{Rxode2ErrorModelLexer}
\title{Rxode2 error model lexer.}
\value{
a lexer object
}
\description{
Rxode2ErrorModelLexer class to handle the lexer for Rxode2 error model
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tokens}}{list of tokens}

\item{\code{debug}}{logical value to enable/disable debug messages}

\item{\code{t_ignore}}{function to ignore whitespace}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Lexer-t_ADD}{\code{Rxode2ErrorModelLexer$t_ADD()}}
\item \href{#method-Lexer-t_PROP}{\code{Rxode2ErrorModelLexer$t_PROP()}}
\item \href{#method-Lexer-t_COMBINED1}{\code{Rxode2ErrorModelLexer$t_COMBINED1()}}
\item \href{#method-Lexer-t_COMBINED2}{\code{Rxode2ErrorModelLexer$t_COMBINED2()}}
\item \href{#method-Lexer-t_newline}{\code{Rxode2ErrorModelLexer$t_newline()}}
\item \href{#method-Lexer-t_error}{\code{Rxode2ErrorModelLexer$t_error()}}
\item \href{#method-Lexer-clone}{\code{Rxode2ErrorModelLexer$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_ADD"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_ADD}{}}}
\subsection{Method \code{t_ADD()}}{
tokens list of tokens


debug logical value to enable/disable debug messages


t_ADD function to handle ADD token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_ADD(re = "add\\\\s*\\\\([^\\\\)]*\\\\)", t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{re}}{regular expression to match ADD token}

\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_PROP"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_PROP}{}}}
\subsection{Method \code{t_PROP()}}{
t_PROP function to handle PROP token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_PROP(re = "prop\\\\s*\\\\([^\\\\)]*\\\\)", t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{re}}{regular expression to match PROP token}

\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_COMBINED1"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_COMBINED1}{}}}
\subsection{Method \code{t_COMBINED1()}}{
t_COMBINED1 function to handle COMBINED1 token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_COMBINED1(re = "combined1\\\\s*\\\\(\\\\s*\\\\)", t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{re}}{regular expression to match COMBINED1 token}

\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_COMBINED2"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_COMBINED2}{}}}
\subsection{Method \code{t_COMBINED2()}}{
t_COMBINED2 function to handle COMBINED2 token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_COMBINED2(re = "combined2\\\\s*\\\\(\\\\s*\\\\)", t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{re}}{regular expression to match COMBINED2 token}

\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_newline"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_newline}{}}}
\subsection{Method \code{t_newline()}}{
t_ignore function to ignore whitespace


t_newline function to handle newlines
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_newline(re = "\\\\n+", t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{re}}{regular expression to match newlines}

\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-t_error"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-t_error}{}}}
\subsection{Method \code{t_error()}}{
t_error function to handle errors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$t_error(t)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t}}{token object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Lexer-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Lexer-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Rxode2ErrorModelLexer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
